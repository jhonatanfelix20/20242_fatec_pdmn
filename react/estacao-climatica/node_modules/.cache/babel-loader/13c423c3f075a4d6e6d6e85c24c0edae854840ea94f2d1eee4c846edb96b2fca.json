{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhonatan\\\\OneDrive\\\\Documentos\\\\MeusProjetos\\\\programacao_mobile\\\\estacao-climatica\\\\src\\\\index.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport EstacaoClimatica from './EstacaoClimatica';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //this.state = {\n    //    latitude: null,\n    //    longitude: null,\n    //    estacao: null,\n    //    data: null,\n    //    icone: null,\n    //    menssagemDeErro: null\n    // }\n    this.state = {\n      latitude: null,\n      longitude: null,\n      estacao: null,\n      data: null,\n      icone: null,\n      mensagemDeErro: null\n    };\n    this.obterEstacao = (data, latitude) => {\n      const anoAtual = data.getFullYear();\n      //new Date(ano, mes, dia): mes de 0 a 11, dia de 1 a 31\n      //21/06\n      const d1 = new Date(anoAtual, 5, 21);\n      //24/09\n      const d2 = new Date(anoAtual, 8, 24);\n      //22/12\n      const d3 = new Date(anoAtual, 11, 22);\n      //21/03\n      const d4 = new Date(anoAtual, 2, 21);\n      const estouNoSul = latitude < 0;\n      if (data >= d1 && data < d2) return estouNoSul ? 'Inverno' : 'Verão';\n      if (data >= d2 && data < d3) return estouNoSul ? 'Primavera' : 'Outuno';\n      if (data >= d3 || data < d4) return estouNoSul ? 'Verão' : 'Inverno';\n      return estouNoSul ? 'Outono' : 'Primavera';\n    };\n    this.obterLocalizacao = () => {\n      //1. obter a localização do usuario usando o método getCurrentPosition\n\n      //2. Quando ela estiveer disponível:\n\n      //2.1 obter a data atual do sistema\n\n      //2.2 obter a estação climática do usuário usando a função obter estação\n\n      //2.3 obter o nome do ícone usando o mapa de icones\n\n      //2.4 atualizar o estado usando a função this.setState\n      window.navigator.geolocation.getCurrentPosition(posicao => {\n        const dataAtual = new Date();\n        const estacao = this.obterEstacao(dataAtual, posicao.coords.latitude);\n        const icone = this.icones[estacao];\n        this.setState({\n          latitude: posicao.coords.latitude,\n          longitude: posicao.coords.longitude,\n          estacao: estacao,\n          data: dataAtual.toLocaleTimeString(),\n          icone: icone\n        });\n      }, erro => {\n        this.setState({\n          mensagemDeErro: 'Tente novamente mais tarde'\n        });\n      });\n    };\n    this.icones = {\n      'Primavera': 'fa-sedding',\n      'Verão': 'fa-sun',\n      'Outuno': 'fa-tree',\n      'Inverno': 'fa-snowflake'\n    };\n    console.log('construtor');\n  }\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.obterLocalizacao();\n  }\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n  render() {\n    console.log('render');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-4 border mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12 col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(EstacaoClimatica, {\n            icone: this.state.icone,\n            estacao: this.state.estacao,\n            latitude: this.state.latitude,\n            longitude: this.state.longitude,\n            data: this.state.data,\n            mensagemDeErro: this.state.mensagemDeErro,\n            obterLocalizacao: this.state.obterLocalizacao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n}\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 5\n}, this), document.querySelector('#root'));","map":{"version":3,"names":["React","ReactDOM","EstacaoClimatica","jsxDEV","_jsxDEV","App","Component","constructor","props","state","latitude","longitude","estacao","data","icone","mensagemDeErro","obterEstacao","anoAtual","getFullYear","d1","Date","d2","d3","d4","estouNoSul","obterLocalizacao","window","navigator","geolocation","getCurrentPosition","posicao","dataAtual","coords","icones","setState","toLocaleTimeString","erro","console","log","componentDidMount","componentDidUpdate","componentWillUnmount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","document","querySelector"],"sources":["C:/Users/Jhonatan/OneDrive/Documentos/MeusProjetos/programacao_mobile/estacao-climatica/src/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport EstacaoClimatica from './EstacaoClimatica'\r\n\r\nclass App extends React.Component {\r\n    \r\n    state = {\r\n        latitude: null,\r\n        longitude: null,\r\n        estacao: null,\r\n        data: null,\r\n        icone: null,\r\n        mensagemDeErro: null\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        //this.state = {\r\n        //    latitude: null,\r\n        //    longitude: null,\r\n        //    estacao: null,\r\n        //    data: null,\r\n        //    icone: null,\r\n        //    menssagemDeErro: null\r\n       // }\r\n        console.log('construtor')\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('componentDidMount')\r\n        this.obterLocalizacao()\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('componentDidUpdate')\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('componentWillUnmount')\r\n    }\r\n\r\n    obterEstacao = (data, latitude) => {\r\n        \r\n        const anoAtual = data.getFullYear()\r\n        //new Date(ano, mes, dia): mes de 0 a 11, dia de 1 a 31\r\n        //21/06\r\n        const d1 = new Date(anoAtual, 5, 21)\r\n        //24/09\r\n        const d2 = new Date(anoAtual, 8, 24)\r\n        //22/12\r\n        const d3 = new Date(anoAtual, 11, 22)\r\n        //21/03\r\n        const d4 = new Date(anoAtual, 2, 21)\r\n        const estouNoSul = latitude < 0\r\n        if(data >= d1 && data < d2)\r\n            return estouNoSul ? 'Inverno' : 'Verão'\r\n        if(data >= d2 && data < d3)\r\n            return estouNoSul ? 'Primavera' : 'Outuno'\r\n        if(data >= d3 || data < d4)\r\n            return estouNoSul ? 'Verão' : 'Inverno'\r\n        return estouNoSul ? 'Outono' : 'Primavera'\r\n    }\r\n\r\n    obterLocalizacao = () => {\r\n        //1. obter a localização do usuario usando o método getCurrentPosition\r\n\r\n        //2. Quando ela estiveer disponível:\r\n\r\n            //2.1 obter a data atual do sistema\r\n\r\n            //2.2 obter a estação climática do usuário usando a função obter estação\r\n\r\n            //2.3 obter o nome do ícone usando o mapa de icones\r\n\r\n            //2.4 atualizar o estado usando a função this.setState\r\n        window.navigator.geolocation.getCurrentPosition((posicao) => {\r\n                const dataAtual = new Date()\r\n                const estacao = this.obterEstacao(dataAtual, posicao.coords.latitude);\r\n                const icone = this.icones[estacao]\r\n                this.setState(\r\n                {\r\n                    latitude: posicao.coords.latitude,\r\n                    longitude: posicao.coords.longitude,\r\n                    estacao: estacao,\r\n                    data: dataAtual.toLocaleTimeString(),\r\n                    icone: icone\r\n                })\r\n            },\r\n            (erro) => {\r\n                this.setState({mensagemDeErro: 'Tente novamente mais tarde'})\r\n            }\r\n\r\n        )\r\n    }\r\n            \r\n\r\n    icones = {\r\n        'Primavera': 'fa-sedding',\r\n        'Verão': 'fa-sun',\r\n        'Outuno': 'fa-tree',\r\n        'Inverno': 'fa-snowflake'\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log('render')\r\n        return (\r\n            <div className='container p-4 border mt-2'>\r\n                <div className='row justify-content-center'>\r\n                    <div className='col-sm-12 col-md-8'>\r\n                        \r\n                        <EstacaoClimatica \r\n                        icone={this.state.icone}\r\n                        estacao={this.state.estacao}\r\n                        latitude={this.state.latitude}\r\n                        longitude={this.state.longitude}\r\n                        data={this.state.data}\r\n                        mensagemDeErro={this.state.mensagemDeErro}\r\n                        obterLocalizacao={this.state.obterLocalizacao}\r\n\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}