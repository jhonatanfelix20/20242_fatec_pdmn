{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jhonatan\\\\OneDrive\\\\Documentos\\\\MeusProjetos\\\\programacao_mobile\\\\estacao-climatica\\\\src\\\\index.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.obterEstacao = (data, latitude) => {\n      const anoAtual = data.getFullYear();\n      //new Date(ano, mes, dia): mes de 0 a 11, dia de 1 a 31\n      //21/06\n      const d1 = new Date(anoAtual, 5, 21);\n      //24/09\n      const d2 = new Date(anoAtual, 8, 24);\n      //22/12\n      const d3 = new Date(anoAtual, 11, 22);\n      //21/03\n      const d4 = new Date(anoAtual, 2, 21);\n      const estouNoSul = latitude < 0;\n      if (data >= d1 && data < d2) return estouNoSul ? 'Inverno' : 'Verão';\n      if (data >= d2 && data < d3) return estouNoSul ? 'Primavera' : 'Outuno';\n      if (data >= d3 || data < d4) return estouNoSul ? 'Verão' : 'Inverno';\n      return estouNoSul ? 'Outono' : 'Primavera';\n    };\n    this.obterLocalizacao = () => {\n      //1. obter a localização do usuario usando o método getCurrentPosition\n\n      //2. Quando ela estiveer disponível:\n\n      //2.1 obter a data atual do sistema\n\n      //2.2 obter a estação climática do usuário usando a função obter estação\n\n      //2.3 obter o nome do ícone usando o mapa de icones\n\n      //2.4 atualizar o estado usando a função this.setState\n      window.navigator.geolocation.getCurrentPosition(posicao => {\n        const dataAtual = new Date();\n        const estacao = this.obterEstacao(dataAtual, posicao.coords.latitude);\n        const icone = this.icones[estacao];\n        this.setState({\n          latitude: posicao.coords.latitude,\n          longitude: posicao.coords.longitude,\n          estacao: estacao,\n          data: dataAtual.toLocaleTimeString(),\n          icone: icone\n        });\n      });\n    };\n    this.icones = {\n      'Primavera': 'fa-sedding',\n      'Verão': 'fa-sun',\n      'Outuno': 'fa-tree',\n      'Inverno': 'fa-snowflake'\n    };\n    this.state = {\n      latitude: null,\n      longitude: null,\n      estacao: null,\n      data: null,\n      icone: null,\n      menssagemDeErro: null\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-4 border mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-12 col-md-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                tyle: {\n                  height: '6rem'\n                },\n                className: \"d-flex align-items-center rounded md-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: '{fa-solid fa-5x ${this.state.icone}'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"w-75 ms-3 text-center fs-1\",\n                  children: this.state.estacao\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center\",\n                children: this.state.latitude ? 'Coordenadas: ${this.state.latitude},${this.state.longitude}. Data: ${this.state.data}' : 'Clique no botão para saber a sua estação climática'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.obterLocalizacao,\n                className: \"btn btn-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n}\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 5\n}, this), document.querySelector('#root'));","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","App","Component","constructor","props","obterEstacao","data","latitude","anoAtual","getFullYear","d1","Date","d2","d3","d4","estouNoSul","obterLocalizacao","window","navigator","geolocation","getCurrentPosition","posicao","dataAtual","estacao","coords","icone","icones","setState","longitude","toLocaleTimeString","state","menssagemDeErro","render","className","children","tyle","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","querySelector"],"sources":["C:/Users/Jhonatan/OneDrive/Documentos/MeusProjetos/programacao_mobile/estacao-climatica/src/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nclass App extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            latitude: null,\r\n            longitude: null,\r\n            estacao: null,\r\n            data: null,\r\n            icone: null,\r\n            menssagemDeErro: null\r\n        }\r\n    }\r\n\r\n    obterEstacao = (data, latitude) => {\r\n        \r\n        const anoAtual = data.getFullYear()\r\n        //new Date(ano, mes, dia): mes de 0 a 11, dia de 1 a 31\r\n        //21/06\r\n        const d1 = new Date(anoAtual, 5, 21)\r\n        //24/09\r\n        const d2 = new Date(anoAtual, 8, 24)\r\n        //22/12\r\n        const d3 = new Date(anoAtual, 11, 22)\r\n        //21/03\r\n        const d4 = new Date(anoAtual, 2, 21)\r\n        const estouNoSul = latitude < 0\r\n        if(data >= d1 && data < d2)\r\n            return estouNoSul ? 'Inverno' : 'Verão'\r\n        if(data >= d2 && data < d3)\r\n            return estouNoSul ? 'Primavera' : 'Outuno'\r\n        if(data >= d3 || data < d4)\r\n            return estouNoSul ? 'Verão' : 'Inverno'\r\n        return estouNoSul ? 'Outono' : 'Primavera'\r\n    }\r\n\r\n    obterLocalizacao = () => {\r\n        //1. obter a localização do usuario usando o método getCurrentPosition\r\n\r\n        //2. Quando ela estiveer disponível:\r\n\r\n            //2.1 obter a data atual do sistema\r\n\r\n            //2.2 obter a estação climática do usuário usando a função obter estação\r\n\r\n            //2.3 obter o nome do ícone usando o mapa de icones\r\n\r\n            //2.4 atualizar o estado usando a função this.setState\r\n        window.navigator.geolocation.getCurrentPosition((posicao) => {\r\n                const dataAtual = new Date()\r\n                const estacao = this.obterEstacao(dataAtual, posicao.coords.latitude);\r\n                const icone = this.icones[estacao]\r\n                this.setState(\r\n                {\r\n                    latitude: posicao.coords.latitude,\r\n                    longitude: posicao.coords.longitude,\r\n                    estacao: estacao,\r\n                    data: dataAtual.toLocaleTimeString(),\r\n                    icone: icone\r\n                })\r\n            })\r\n        }\r\n            \r\n\r\n    icones = {\r\n        'Primavera': 'fa-sedding',\r\n        'Verão': 'fa-sun',\r\n        'Outuno': 'fa-tree',\r\n        'Inverno': 'fa-snowflake'\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div className='container p-4 border mt-2'>\r\n                <div className='row justify-content-center'>\r\n                    <div className='col-sm-12 col-md-8'>\r\n                        <div className='card'>\r\n                            <div className='card-body'>\r\n                                <div \r\n                                    tyle={{height: '6rem'}}\r\n                                    className='d-flex align-items-center rounded md-2'>\r\n                                        <i className={'{fa-solid fa-5x ${this.state.icone}'}></i>\r\n                                        <p className='w-75 ms-3 text-center fs-1'>{this.state.estacao}</p>\r\n                                </div>\r\n                                <p className='text-center'>\r\n                                    {\r\n                                        this.state.latitude ?\r\n                                            'Coordenadas: ${this.state.latitude},${this.state.longitude}. Data: ${this.state.data}'\r\n                                        :\r\n                                            'Clique no botão para saber a sua estação climática'\r\n                                    }\r\n                                </p>\r\n                                <button\r\n                                    onClick={this.obterLocalizacao}\r\n                                    className='btn btn-'>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}